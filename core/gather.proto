syntax = "proto2";
package gather;

import "google/protobuf/empty.proto";

service GatherService {
  rpc CreateUser(GUserRecord) returns (google.protobuf.Empty);
  rpc GetServerInfo(google.protobuf.Empty) returns (GServerInfo);
  rpc GetAuthCredential(GAuthCredentialRequest) returns (GAuthCredentialResponse);
  rpc GetProfileKeyCredential(GProfileKeyCredentialRequest) returns (GProfileKeyCredentialResponse);
  rpc CreateEvent(GCreateEventRequest) returns (google.protobuf.Empty);
  rpc FetchEvent(GFetchEventRequest) returns (GEventRecord);
  rpc AddEventMember(GAddEventMemberRequest) returns (google.protobuf.Empty);
  rpc SetEventMemberState(GSetEventMemberStateRequest) returns (google.protobuf.Empty);
}

message GServerInfo {
  required bytes publicParams = 1;
}

message GProfileRecord {
  required bytes content = 1;
  required bytes profileKeyVersion = 2;
  required bytes profileKeyCommitment = 3;
}

message GUserRecord {
  required string uuid = 1;
  required bytes passwordHash = 2;
  required GProfileRecord profile = 3;
}

//message GCreateUserRequest {
//  required GUserRecord userRecord = 1;
//}

message GAuthCredentialRequest {
  required string uuid = 1;
  required bytes passwordHash = 2;
}

message GAuthCredentialResponse {
  required bytes authCredentialResponse = 1;
}


message GProfileKeyCredentialRequest {
  required string uuid = 1;
  required bytes profileKeyVersion = 2;
  required bytes profileKeyCredentialRequest = 3;
}


message GProfileKeyCredentialResponse {
  required bytes profileKeyCredentialResponse = 1;
}

message GEventMemberRecord {
  required bytes profileKeyCredentialPresentation = 1;
  required GEventMemberRole role = 2;
  optional bytes state = 3;
}

message GCreateEventRequest {
  required bytes groupPublicParams = 1;
  required bytes content = 2;
  required bytes authCredentialPresentation = 3;
  repeated GEventMemberRecord initialMembers = 4;
}

message GFetchEventRequest {
  required bytes groupIdentifier = 1;
  required bytes authCredentialPresentation = 2;
}

message GEventRecord {
  required bytes groupIdentifier = 1;
  required bytes groupPublicParams = 2;
  required bytes content = 3;
  repeated GEventMemberRecord members = 4;
}

message GAddEventMemberRequest {
  required bytes groupIdentifier = 1;
  required bytes authCredentialPresentation = 2;
  required bytes newMemberProfileKeyCredentialPresentation = 3;
  required GEventMemberRole newMemberRole = 4;
}

message GSetEventMemberStateRequest {
  required bytes groupIdentifier = 1;
  required bytes authCredentialPresentation = 2;
  required bytes newState = 3;
}

enum GEventMemberAttendance {
  UNKNOWN = 0;
  GOING = 1;
  NOT_GOING = 2;
}

enum GEventMemberRole {
  CREATOR = 0;
  ADMIN = 1;
  DEFAULT = 2;
}